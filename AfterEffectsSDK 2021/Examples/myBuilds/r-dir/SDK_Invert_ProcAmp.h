/*******************************************************************/
/*                                                                 */
/*                      ADOBE CONFIDENTIAL                         */
/*                   _ _ _ _ _ _ _ _ _ _ _ _ _                     */
/*                                                                 */
/* Copyright 2007 Adobe Systems Incorporated                       */
/* All Rights Reserved.                                            */
/*                                                                 */
/* NOTICE:  All information contained herein is, and remains the   */
/* property of Adobe Systems Incorporated and its suppliers, if    */
/* any.  The intellectual and technical concepts contained         */
/* herein are proprietary to Adobe Systems Incorporated and its    */
/* suppliers and may be covered by U.S. and Foreign Patents,       */
/* patents in process, and are protected by trade secret or        */
/* copyright law.  Dissemination of this information or            */
/* reproduction of this material is strictly forbidden unless      */
/* prior written permission is obtained from Adobe Systems         */
/* Incorporated.                                                   */
/*                                                                 */
/*******************************************************************/

#pragma once
#ifndef SDK_Invert_ProcAmp_H
#define SDK_Invert_ProcAmp_H

#include "SDK_Invert_ProcAmp_Kernel.cl.h"
#include "AEConfig.h"
#include "entry.h"
#include "AEFX_SuiteHelper.h"
#include "PrSDKAESupport.h"
#include "AE_Effect.h"
#include "AE_EffectCB.h"
#include "AE_EffectCBSuites.h"
#include "AE_EffectGPUSuites.h"
#include "AE_Macros.h"
#include "AEGP_SuiteHandler.h"
#include "String_Utils.h"
#include "Param_Utils.h"
#include "Smart_Utils.h"


#if _WIN32
#include <CL/cl.h>
#define HAS_METAL 0
#else
#include <OpenCL/cl.h>
#define HAS_METAL 1
#include <Metal/Metal.h>
#include "SDK_Invert_ProcAmp_Kernel.metal.h"
#endif
#include <math.h>

#include "AEConfig.h"
#include "entry.h"
#ifdef AE_OS_WIN
	#include <Windows.h>
#endif
#include "AE_Effect.h"
#include "AE_EffectCB.h"
#include "AE_Macros.h"
#include "Param_Utils.h"
#include "AE_EffectCBSuites.h"
#include "String_Utils.h"
#include "AE_GeneralPlug.h"
#include "AEGP_SuiteHandler.h"


#define DESCRIPTION	""

#define NAME			"r-dir"
#define	MAJOR_VERSION	1
#define	MINOR_VERSION	0
#define	BUG_VERSION		0
#define	STAGE_VERSION	PF_Stage_DEVELOP
#define	BUILD_VERSION	1


enum {
	RELIGHTING_INPUT = 0,

	// Debug

	POPUP_RENDER_MODE,

	// Depth Settings

	TOPIC_ADD_DEPTH_SETTINGS,
	SLIDER_DEPTH_FAR,
	CHECKBOX_DEPTH_BLACK_IS_NEAR,
	TOPIC_END_DEPTH_SETTINGS,

	// Normal Settings

	TOPIC_ADD_NORMAL_SETTINGS,
	LAYER_NORMAL,
	TOPIC_END_NORMAL_SETTINGS,

	// Light Layers

	TOPIC_ADD_LIGHT_LAYERS,
	LAYER_LIGHT_START_1,
	LAYER_LIGHT_END_1,
	LAYER_LIGHT_START_2,
	LAYER_LIGHT_END_2,
	LAYER_LIGHT_START_3,
	LAYER_LIGHT_END_3,
	LAYER_LIGHT_START_4,
	LAYER_LIGHT_END_4,
	LAYER_LIGHT_START_5,
	LAYER_LIGHT_END_5,
	TOPIC_END_LIGHT_LAYERS,

	// Global Light Settings

	TOPIC_ADD_GLOBAL_LIGHT_SETTINGS,
	SLIDER_INTENSITY_MULTIPLIER,
	SLIDER_SATURATION_MULTIPLIER,
	TOPIC_END_GLOBAL_LIGHT_SETTINGS,

	// Local Light Settings 1

	TOPIC_ADD_LOCAL_LIGHT_SETTINGS_1,
	// Lights
	CHECKBOX_LIGHT_TOGGLE_1,
	POINT_3D_LIGHT_POS_1_1,
	POINT_3D_LIGHT_POS_2_1,
	// Ambient
	CHECKBOX_AMBIENT_TOGGLE_1,
	SLIDER_AMBIENT_INTENSITY_1,
	SLIDER_AMBIENT_SATURATION_1,
	COLOR_AMBIENT_COLOR_1,
	// Diffuse
	CHECKBOX_DIFFUSE_TOGGLE_1,
	SLIDER_DIFFUSE_INTENSITY_1,
	SLIDER_DIFFUSE_SATURATION_1,
	COLOR_DIFFUSE_COLOR_1,
	// Specular
	CHECKBOX_SPECULAR_TOGGLE_1,
	SLIDER_SPECULAR_SIZE_1,
	SLIDER_SPECULAR_INTENSITY_1,
	SLIDER_SPECULAR_SATURATION_1,
	COLOR_SPECULAR_COLOR_1,
	// Shadows
	CHECKBOX_SHADOW_TOGGLE_1,
	CHECKBOX_SHADOW_IGNORE_AMBIENT_TOGGLE_1,
	CHECKBOX_SHADOW_IGNORE_DIFFUSE_TOGGLE_1,
	CHECKBOX_SHADOW_IGNORE_SPECULAR_TOGGLE_1,
	SLIDER_SHADOW_SAMPLE_STEP_1,
	SLIDER_SHADOW_IMPROVED_SAMPLE_RADIUS_1,
	SLIDER_SHADOW_MAX_LENGTH_1,
	SLIDER_SHADOW_THRESHOLD_START_1,
	SLIDER_SHADOW_THRESHOLD_END_1,
	SLIDER_SHADOW_SOFTNESS_RADIUS_1,
	SLIDER_SHADOW_SOFTNESS_SAMPLES_1,
	SLIDER_SHADOW_INTENSITY_1,
	COLOR_SHADOW_COLOR_1,
	//
	TOPIC_END_LOCAL_LIGHT_SETTINGS_1,


	// Local Light Settings 2

	TOPIC_ADD_LOCAL_LIGHT_SETTINGS_2,
	// Lights
	CHECKBOX_LIGHT_TOGGLE_2,
	POINT_3D_LIGHT_POS_1_2,
	POINT_3D_LIGHT_POS_2_2,
	// Ambient
	CHECKBOX_AMBIENT_TOGGLE_2,
	SLIDER_AMBIENT_INTENSITY_2,
	SLIDER_AMBIENT_SATURATION_2,
	COLOR_AMBIENT_COLOR_2,
	// Diffuse
	CHECKBOX_DIFFUSE_TOGGLE_2,
	SLIDER_DIFFUSE_INTENSITY_2,
	SLIDER_DIFFUSE_SATURATION_2,
	COLOR_DIFFUSE_COLOR_2,
	// Specular
	CHECKBOX_SPECULAR_TOGGLE_2,
	SLIDER_SPECULAR_SIZE_2,
	SLIDER_SPECULAR_INTENSITY_2,
	SLIDER_SPECULAR_SATURATION_2,
	COLOR_SPECULAR_COLOR_2,
	// Shadows
	CHECKBOX_SHADOW_TOGGLE_2,
	CHECKBOX_SHADOW_IGNORE_AMBIENT_TOGGLE_2,
	CHECKBOX_SHADOW_IGNORE_DIFFUSE_TOGGLE_2,
	CHECKBOX_SHADOW_IGNORE_SPECULAR_TOGGLE_2,
	SLIDER_SHADOW_SAMPLE_STEP_2,
	SLIDER_SHADOW_IMPROVED_SAMPLE_RADIUS_2,
	SLIDER_SHADOW_MAX_LENGTH_2,
	SLIDER_SHADOW_THRESHOLD_START_2,
	SLIDER_SHADOW_THRESHOLD_END_2,
	SLIDER_SHADOW_SOFTNESS_RADIUS_2,
	SLIDER_SHADOW_SOFTNESS_SAMPLES_2,
	SLIDER_SHADOW_INTENSITY_2,
	COLOR_SHADOW_COLOR_2,
	//
	TOPIC_END_LOCAL_LIGHT_SETTINGS_2,


	// Local Light Settings 3

	TOPIC_ADD_LOCAL_LIGHT_SETTINGS_3,
	// Lights
	CHECKBOX_LIGHT_TOGGLE_3,
	POINT_3D_LIGHT_POS_1_3,
	POINT_3D_LIGHT_POS_2_3,
	// Ambient
	CHECKBOX_AMBIENT_TOGGLE_3,
	SLIDER_AMBIENT_INTENSITY_3,
	SLIDER_AMBIENT_SATURATION_3,
	COLOR_AMBIENT_COLOR_3,
	// Diffuse
	CHECKBOX_DIFFUSE_TOGGLE_3,
	SLIDER_DIFFUSE_INTENSITY_3,
	SLIDER_DIFFUSE_SATURATION_3,
	COLOR_DIFFUSE_COLOR_3,
	// Specular
	CHECKBOX_SPECULAR_TOGGLE_3,
	SLIDER_SPECULAR_SIZE_3,
	SLIDER_SPECULAR_INTENSITY_3,
	SLIDER_SPECULAR_SATURATION_3,
	COLOR_SPECULAR_COLOR_3,
	// Shadows
	CHECKBOX_SHADOW_TOGGLE_3,
	CHECKBOX_SHADOW_IGNORE_AMBIENT_TOGGLE_3,
	CHECKBOX_SHADOW_IGNORE_DIFFUSE_TOGGLE_3,
	CHECKBOX_SHADOW_IGNORE_SPECULAR_TOGGLE_3,
	SLIDER_SHADOW_SAMPLE_STEP_3,
	SLIDER_SHADOW_IMPROVED_SAMPLE_RADIUS_3,
	SLIDER_SHADOW_MAX_LENGTH_3,
	SLIDER_SHADOW_THRESHOLD_START_3,
	SLIDER_SHADOW_THRESHOLD_END_3,
	SLIDER_SHADOW_SOFTNESS_RADIUS_3,
	SLIDER_SHADOW_SOFTNESS_SAMPLES_3,
	SLIDER_SHADOW_INTENSITY_3,
	COLOR_SHADOW_COLOR_3,
	//
	TOPIC_END_LOCAL_LIGHT_SETTINGS_3,


	// Local Light Settings 4

	TOPIC_ADD_LOCAL_LIGHT_SETTINGS_4,
	// Lights
	CHECKBOX_LIGHT_TOGGLE_4,
	POINT_3D_LIGHT_POS_1_4,
	POINT_3D_LIGHT_POS_2_4,
	// Ambient
	CHECKBOX_AMBIENT_TOGGLE_4,
	SLIDER_AMBIENT_INTENSITY_4,
	SLIDER_AMBIENT_SATURATION_4,
	COLOR_AMBIENT_COLOR_4,
	// Diffuse
	CHECKBOX_DIFFUSE_TOGGLE_4,
	SLIDER_DIFFUSE_INTENSITY_4,
	SLIDER_DIFFUSE_SATURATION_4,
	COLOR_DIFFUSE_COLOR_4,
	// Specular
	CHECKBOX_SPECULAR_TOGGLE_4,
	SLIDER_SPECULAR_SIZE_4,
	SLIDER_SPECULAR_INTENSITY_4,
	SLIDER_SPECULAR_SATURATION_4,
	COLOR_SPECULAR_COLOR_4,
	// Shadows
	CHECKBOX_SHADOW_TOGGLE_4,
	CHECKBOX_SHADOW_IGNORE_AMBIENT_TOGGLE_4,
	CHECKBOX_SHADOW_IGNORE_DIFFUSE_TOGGLE_4,
	CHECKBOX_SHADOW_IGNORE_SPECULAR_TOGGLE_4,
	SLIDER_SHADOW_SAMPLE_STEP_4,
	SLIDER_SHADOW_IMPROVED_SAMPLE_RADIUS_4,
	SLIDER_SHADOW_MAX_LENGTH_4,
	SLIDER_SHADOW_THRESHOLD_START_4,
	SLIDER_SHADOW_THRESHOLD_END_4,
	SLIDER_SHADOW_SOFTNESS_RADIUS_4,
	SLIDER_SHADOW_SOFTNESS_SAMPLES_4,
	SLIDER_SHADOW_INTENSITY_4,
	COLOR_SHADOW_COLOR_4,
	//
	TOPIC_END_LOCAL_LIGHT_SETTINGS_4,


	// Local Light Settings 5

	TOPIC_ADD_LOCAL_LIGHT_SETTINGS_5,
	// Lights
	CHECKBOX_LIGHT_TOGGLE_5,
	POINT_3D_LIGHT_POS_1_5,
	POINT_3D_LIGHT_POS_2_5,
	// Ambient
	CHECKBOX_AMBIENT_TOGGLE_5,
	SLIDER_AMBIENT_INTENSITY_5,
	SLIDER_AMBIENT_SATURATION_5,
	COLOR_AMBIENT_COLOR_5,
	// Diffuse
	CHECKBOX_DIFFUSE_TOGGLE_5,
	SLIDER_DIFFUSE_INTENSITY_5,
	SLIDER_DIFFUSE_SATURATION_5,
	COLOR_DIFFUSE_COLOR_5,
	// Specular
	CHECKBOX_SPECULAR_TOGGLE_5,
	SLIDER_SPECULAR_SIZE_5,
	SLIDER_SPECULAR_INTENSITY_5,
	SLIDER_SPECULAR_SATURATION_5,
	COLOR_SPECULAR_COLOR_5,
	// Shadows
	CHECKBOX_SHADOW_TOGGLE_5,
	CHECKBOX_SHADOW_IGNORE_AMBIENT_TOGGLE_5,
	CHECKBOX_SHADOW_IGNORE_DIFFUSE_TOGGLE_5,
	CHECKBOX_SHADOW_IGNORE_SPECULAR_TOGGLE_5,
	SLIDER_SHADOW_SAMPLE_STEP_5,
	SLIDER_SHADOW_IMPROVED_SAMPLE_RADIUS_5,
	SLIDER_SHADOW_MAX_LENGTH_5,
	SLIDER_SHADOW_THRESHOLD_START_5,
	SLIDER_SHADOW_THRESHOLD_END_5,
	SLIDER_SHADOW_SOFTNESS_RADIUS_5,
	SLIDER_SHADOW_SOFTNESS_SAMPLES_5,
	SLIDER_SHADOW_INTENSITY_5,
	COLOR_SHADOW_COLOR_5,
	//
	TOPIC_END_LOCAL_LIGHT_SETTINGS_5,

	RELIGHTING_NUM_PARAMS
};

extern "C" {

	DllExport 
	PF_Err
	EffectMain (	
		PF_Cmd			cmd,
		PF_InData		*in_data,
		PF_OutData		*out_data,
		PF_ParamDef		*params[],
		PF_LayerDef		*output,
		void			*extra);

}

#if HAS_METAL
	/*
	 ** Plugins must not rely on a host autorelease pool.
	 ** Create a pool if autorelease is used, or Cocoa convention calls, such as Metal, might internally autorelease.
	 */
	struct ScopedAutoreleasePool
	{
		ScopedAutoreleasePool()
		:  mPool([[NSAutoreleasePool alloc] init])
		{
		}
	
		~ScopedAutoreleasePool()
		{
			[mPool release];
		}
	
		NSAutoreleasePool *mPool;
	};
#endif 

#endif // SDK_Invert_ProcAmp_H
